<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Matt Snider</title>
    <link>https://matt-snider.github.io/tags/python/</link>
    <description>Recent content in Python on Matt Snider</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Â© 2024 Matt Snider</copyright><atom:link href="https://matt-snider.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Todoist Taskwarrior</title>
      <link>https://matt-snider.github.io/projects/todoist-taskwarrior/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matt-snider.github.io/projects/todoist-taskwarrior/</guid>
      <description>&lt;p&gt;I used &lt;a href=&#34;https://todoist.com/&#34;&gt;Todoist&lt;/a&gt; for a long time and it is a really great productivity app. But
after trying &lt;a href=&#34;https://taskwarrior.org/&#34;&gt;Taskwarrior&lt;/a&gt;, I knew I wanted to switch. I enjoy using and
building CLI tools, so I decided to build a tool to migrate all my tasks from Todoist into
Taskwarrior.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SOCKS5 Proxy</title>
      <link>https://matt-snider.github.io/projects/socks5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matt-snider.github.io/projects/socks5/</guid>
      <description>&lt;p&gt;I wanted to experiment with Python&amp;rsquo;s asyncio and build a server application. SOCKS is
a simple binary protocol that is well documented and was easy to implement from the
&lt;a href=&#34;https://tools.ietf.org/html/rfc1928&#34;&gt;RFC&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Surf Media Gmbh</title>
      <link>https://matt-snider.github.io/work/surf-media-gmbh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matt-snider.github.io/work/surf-media-gmbh/</guid>
      <description> Built and tested web services in a microservices architecture for an advertising performance network using Java/Dropwizard and Python/Flask/DRF Developed a proxy server to interface with mobile devices as part of our automated ad-testing infrastructure </description>
    </item>
    
  </channel>
</rss>
